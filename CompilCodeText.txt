#include <iostream>
#include <fstream>
#include <string>
using namespace std;
// Amroune Adem Mahmoude &Baza Mouhamed Nafea
int main() {
	//ProgCode for input code
	    string ProgCode;
	    //x for shows 
		int x=0;
		//creat fille and put insid him ProgCode Value
		 ofstream InPutProgramm;
        InPutProgramm.open ("InPutProgramm.txt");
        cout<<"Amroune Adem Mahmoude & Baza Mouhamed Nafea"<<endl<<endl;
         cout<<"Enter Your Code:"<<endl;

		getline(cin, ProgCode);
		    InPutProgramm <<ProgCode;
		       InPutProgramm.close();
	   //
		       
     //Read from the file    
     //InPutProgramm.txt ism al milaf 
    	std::ifstream ifs("InPutProgramm.txt", std::ifstream::in);

    	string name(
            (std::istreambuf_iterator<char>(ifs)),
            std::istreambuf_iterator<char>()
    );

    int i=0;
    name=name+' ';
    while (name[i]!=NULL){
        i++;
    }
    fstream fout("F_OUT.txt",ios::out);
    std::ifstream foutREd("F_OUT.txt",std::ifstream::in);
    fout<<"----------------------------------"<<endl;
    fout<<"|   Word   |         Token        |"<<endl;
    // fout<<"|          |                      |"<<endl;
    fout<<"----------------------------------"<<endl;
    //filter Words
    for (int j = 0; j <= i; ++j) {


        if(name[j]==' '||name[j]=='\n'){
            if (name[j-1]=='r' && name[j-2]=='o' && name[j-3]=='f'){
                fout<<"|for       |        keywords      | ";
            }
             if (name[j-1]=='n' && name[j-2]=='r' && name[j-3]=='u'&& name[j-4]=='t' && name[j-5]=='e'&& name[j-6]=='r'){
                fout<<"|return    |       keywords       | ";
            }
             if (name[j-1]=='c' && name[j-2]=='i' && name[j-3]=='t'&& name[j-4]=='a' && name[j-5]=='t'&& name[j-6]=='s'){
                fout<<"|static    |        keywords      | ";
            }
             if (name[j-1]=='d' && name[j-2]=='i' && name[j-3]=='o'&& name[j-4]=='v'){
                fout<<"|void      |        keywords      | ";
            }
             if (name[j-1]=='f' && name[j-2]=='o' && name[j-3]=='e'&& name[j-4]=='z' && name[j-5]=='i'&& name[j-6]=='s'){
                fout<<"|sizeof    |        keywords      | ";
            }
            if (name[j-1]=='k' && name[j-2]=='a' && name[j-3]=='e'&& name[j-4]=='r' && name[j-5]=='b'){
                fout<<"|break     |        keywords      | ";
            }
            if (name[j-1]=='o' && name[j-2]=='t' && name[j-3]=='o' && name[j-4]=='g'){
                fout<<"|goto      |        keywords      | ";
            }
             if (name[j-1]=='t' && name[j-2]=='c' && name[j-3]=='u'&& name[j-4]=='r' && name[j-5]=='t'&& name[j-6]=='s'){
                fout<<"|struct    |        keywords      | ";
            }
            if (name[j-1]=='f' && name[j-2]=='i' ){
                fout<<"|if        |        keywords      | ";
            }
            if (name[j-1]=='e' && name[j-2]=='s' && name[j-3]=='l'&& name[j-4]=='e') {
                fout << "|else      |        keywords      |";
            }
            if (name[j-1]=='e' && name[j-2]=='l' && name[j-3]=='i'&& name[j-4]=='h'&& name[j-5]=='w') {
                fout << "|while     |        keywords      |";
            }
            if (name[j-1]=='h' && name[j-2]=='c' && name[j-3]=='t'&& name[j-4]=='i'&& name[j-5]=='w'&& name[j-6]=='s') {
                fout << "|switch    |        keywords      | ";
            }
            if (name[j-1]=='t' && name[j-2]=='a' && name[j-3]=='o'&& name[j-4]=='l' && name[j-5]=='f'){
                fout<<"|float     |        keywords      | ";
            }
            if (name[j-1]=='g' && name[j-2]=='n' && name[j-3]=='i'&& name[j-4]=='r' && name[j-5]=='t'&& name[j-6]=='s'){
                fout<<"|string    |        keywords      | ";
            }
            if (name[j-1]=='e' && name[j-2]=='l' && name[j-3]=='b'&& name[j-4]=='u' && name[j-5]=='o'&& name[j-6]=='d'){
                fout<<"|double    |        keywords      |";
            }
            if (name[j-1]=='t' && name[j-2]=='n' && name[j-3]=='i'){
                fout<<"|int       |      Variable Type   |";
            }
            if (name[j-1]=='='){
                fout<<"|=         |        operator      |";
            }

            if (name[j-1]=='<'){
                fout<<"|<         |        operator      | ";
            }
            if (name[j-1]=='+' && name[j-2]=='+' && name[j-3]=='i'){
           // if (name[j-1]=='i++'){
                fout<<"|i++       |        operator      | ";
            }
            if (name[j-1]=='+'){
                fout<<"|+         |        operator      | ";
            }
            if (name[j-1]=='(' ){
                fout<<"|(         |        separator     |";
            }
            if (name[j-1]==')' ){
                fout<<"|)         |        separator     |";
            }
             if (name[j-1]=='{' ){
                fout<<"|{         |        separator     |";
            }
            if (name[j-1]=='}' ){
                fout<<"|}         |        separator     |";
            }
            if (name[j-1]==';'){
                fout<<"|;         |        punctuation   |";
            }
             if (name[j-1]=='|'){
                fout<<"||         |        punctuation   |";
            }
             if (name[j-1]=='\''){
                fout<<"|\         |        punctuation   |";
            }
             if (name[j-1]=='/'){
                fout<<"|/         |        punctuation   |";
            }
             if (name[j-1]=='.'){
                fout<<"|.         |        punctuation   |";
            }
             if (name[j-1]=='<'){
                fout<<"|<         |        operator      |";
            }
             if (name[j-1]=='>'){
                fout<<"|>         |        operator      |";
            }
             if (name[j-1]=='_'){
                fout<<"|_         |        punctuation   |";
            }
             if (name[j-1]=='['){
                fout<<"|[         |        separator     |";
            }
             if (name[j-1]==']'){
                fout<<"|]         |        separator     |";
            }
            if (name[j-1]=='a'){
                fout<<"|a         |        identefier    |";
            }
            if (name[j-1]=='i'){
                fout<<"|i         |        identefier    |";
            }
            if (name[j-1]=='0'){
                fout<<"|0         |        number        |";
            }
             if (name[j-1]=='1'){
                fout<<"|1         |        number        |";
            }
             if (name[j-1]=='2'){
                fout<<"|2         |        number        |";
            }
             if (name[j-1]=='3'){
                fout<<"|3         |        number        |";
            }
             if (name[j-1]=='4'){
                fout<<"|4         |        number        |";
            }
             if (name[j-1]=='5'){
                fout<<"|5         |        number        |";
            }
             if (name[j-1]=='6'){
                fout<<"|6         |        number        |";
            }
             if (name[j-1]=='7'){
                fout<<"|7         |        number        |";
            }
             if (name[j-1]=='8'){
                fout<<"|8         |        number        |";
            }
             if (name[j-1]=='9'){
                fout<<"|9         |        number        |";
            }
            fout<<endl;
        }
    }
    	cout<<"1:Show Result"<<endl;
    	cout<<"2:Exit"<<endl;
		cout<<"Shows one:";
		cin>>x;

		while(true)
		{
     
		if(x==1)
			{
			  std::cout << foutREd.rdbuf()<<endl;
			   x=0;
			  	
			}
			cout<<"1:Show Result"<<endl;
		    	cout<<"2:Return add Another code"<<endl;
				cout<<"Shows one:";
				cin>>x;

			   if (x==2)
			   {
			   	break;
			   }
    
}
    
    fout.close();
// Amroune Adem Mahmoude &Baza Mouhamed Nafea
    return 0;
}
